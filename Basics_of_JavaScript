In JavaScript, there are three ways to declare a variable: using the var, let, or const keywords.

  1.  var keyword: The var keyword is used to declare a variable in the global or local scope. 
    Variables declared with var are function-scoped, which means that they are accessible within the function in which they are declared or in any nested functions.

Example:
var name = "John";
function sayName() {
  var message = "My name is " + name;
  console.log(message);
}
sayName(); // Output: "My name is John"
console.log(message); // ReferenceError: message is not defined

 2.   let keyword: The let keyword is used to declare a block-scoped variable. Variables declared with let are only accessible within the block in which they are declared (i.e., a pair of curly braces {}).

Example:
function count() {
  for (let i = 0; i < 5; i++) {
    console.log(i);
  }
  console.log(i); // ReferenceError: i is not defined
}
count(); // Output: 0 1 2 3 4

  3.  const keyword: The const keyword is used to declare a block-scoped variable that cannot be reassigned. Variables declared with const must be assigned a value at the time of declaration and cannot be assigned a new value later.

Example:
const PI = 3.14159;
PI = 3; // TypeError: Assignment to constant variable.

Note that it is considered best practice to use const by default, and only use let when you need to reassign a variable. Avoid using var as it can cause unexpected behavior due to its function-scoped nature.
